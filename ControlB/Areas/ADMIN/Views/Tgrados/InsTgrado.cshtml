@using Model.BL.Tipos
@model Tgrados

@{
    var viewName = Path.GetFileNameWithoutExtension(VirtualPath);
}


<div id="@viewName">
    <!-- Script de la vista modal -->
    <script src="~/Areas/ADMIN/Scripts/Tgrados/InsTgrado.js"></script>

    @using (Ajax.BeginForm("InsTgrado", "Tgrados", new { Area = "ADMIN" }, new AjaxOptions { HttpMethod = "POST", OnSuccess = viewName + ".onSuccess" }, new { enable_placeholder = "" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title">Registrar nivel académico</h4>
        </div>

        <div class="modal-body">
            @Html.HiddenFor(m => m.Estado, new {  Value = 1})

            <div class="form-group">
                @Html.LabelFor(m => m.NivelId)                
                @(Html.Kendo().DropDownListFor(model => model.NivelId)
                              .Name("NivelId")
                              .DataTextField("Nombre")
                              .DataValueField("Id")
                              .OptionLabel("Seleccione...")
                              .DataSource(source =>
                              {
                                  source.Custom().Type("aspnetmvc-ajax")
                                      .Transport(t =>
                                      {
                                          t.Read(r => r.Action("GetListTniveles", "Tniveles", new { Area = "ADMIN" }));
                                      })
                                      .ServerFiltering(false)
                                      .Schema(s => { s.Data("Data").Total("Total").Errors("Errors"); })
                                      .Events(e => e.Error("handleOnErrorModelState"));
                              })
                            .HtmlAttributes(new { style = "width:100%;", @class = "itemComponente" })
                )
                
                @Html.ValidationMessageFor(m => m.NivelId)
            </div>  

            <div class="form-group">
                @Html.LabelFor(m => m.Nombre)
                @(Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", autocomplete = "off" }))
                @Html.ValidationMessageFor(m => m.Nombre)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Numero)
                @Html.Kendo().NumericTextBoxFor(m => m.Numero).HtmlAttributes(new { @style = "width: 100%", autocomplete = "off", @class = "texto-detalle", @placeholder = "Posición" }).Format("#").Min(-3).Max(20)
                @Html.ValidationMessageFor(m => m.Numero)
            </div>    

            <div class="form-group">
                @Html.LabelFor(m => m.Codigo)
                @(Html.TextBoxFor(m => m.Codigo, new { @class = "form-control", autocomplete = "off" }))
                @Html.ValidationMessageFor(m => m.Codigo)
            </div>                    
                   
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            <button type="submit" class="btn btn-primary">Guardar</button>
        </div>
    }

    <!-- Inicialización script de vista -->
    <script>
	@(viewName).init();
    </script>
</div>
