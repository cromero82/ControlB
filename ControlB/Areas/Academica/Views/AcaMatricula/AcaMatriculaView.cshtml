
@model AcaMatriculaVM
@{
    #region definiciones
    MvcForm form;
    var viewName = ViewContext.RouteData.Values["action"].ToString(); 
    var controllerName = ViewContext.RouteData.Values["controller"].ToString(); var area = ViewContext.RouteData.DataTokens["area"];
    #endregion
 }

<div id="@controllerName">    
    @if (ViewBag.Accion == "Insertar") { form = Ajax.BeginForm("InsAcaMatricula", controllerName, new { Area = area }, new AjaxOptions { HttpMethod = "POST", OnSuccess = "onSuccessGenerico", OnFailure = "onFailureGenerico" }, new { enable_placeholder = "" }); }
    else {                               form = Ajax.BeginForm("UpdAcaMatricula", controllerName, new { Area = area }, new AjaxOptions { HttpMethod = "POST", OnSuccess = "onSuccessGenerico", OnFailure = "onFailureGenerico" }, new { enable_placeholder = "" }); }
    @using (form)
    {        
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title">@ViewBag.Accion Persona</h4>
        </div>

        <div class="modal-body">
            @Html.HiddenFor(m => m.Estregistro, new { Value = 1 })
            @Html.Partial("_ValidationSummaryPersonalizado")
                <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.EstudianteId)
                        @(Html.Kendo().DropDownListFor(model => model.EstudianteId)                              
                              .DataTextField("Nombre")
                              .DataValueField("Id")
                              .OptionLabel("Seleccione...")
                              .DataSource(source =>
                              {
                                  source.Custom().Type("aspnetmvc-ajax")
                                      .Transport(t =>
                                      {
                                          t.Read(r => r.Action("GetListTdocumentos", "Tlistas", new { Area = "ADMIN" }).Type(HttpVerbs.Post));
                                      })
                                      .ServerFiltering(false)
                                      .Schema(s => { s.Data("Data").Total("Total").Errors("Errors"); })
                                      .Events(e => e.Error("handleOnErrorModelState"));
                              })
                              .Filter("contains")
                            .HtmlAttributes(new { style = "width:100%;", @class = "itemComponente" })
                        )
                        @Html.ValidationMessageFor(m => m.EstudianteId)
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.GradoId)
                        @(Html.Kendo().DropDownListFor(m => m.GradoId)
                      .Name("departamentos")
                      .HtmlAttributes(new { style = "width:100%" })
                      .OptionLabel("Seleccione departamento...")
                      .DataTextField("Nombre")
                      .DataValueField("DepartamentoId")
                      .Filter("contains")
                              .DataSource(source =>
                              {
                                  source.Custom().Type("aspnetmvc-ajax")
                                      .Transport(t =>
                                      {
                                          t.Read(r => r.Action("GetListTdepartamentos", "Tlistas", new { Area = "ADMIN" }).Type(HttpVerbs.Post));
                                      })
                                      .ServerFiltering(false)
                                      .Schema(s =>
                                      {
                                          s.Data("Data").Total("Total").Errors("Errors");
                                      })
                                      .Events(e => e.Error("handleOnErrorModelState"));
                              })
                            .HtmlAttributes(new { style = "width:100%;", @class = "itemComponente" })
                        )
                        @Html.ValidationMessageFor(m => m.GradoId)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="form-group">
                            @Html.LabelFor(m => m.PersonaFamiliarId)
                            @(Html.Kendo().DropDownListFor(m => m.PersonaFamiliarId)
                      .HtmlAttributes(new { style = "width:100%" })
                      .OptionLabel("Select order...")
                      .DataTextField("Nombre")
                      .DataValueField("Id")
                      .Filter("contains")
                      .DataSource(source =>
                      {
                          source.Custom().Type("aspnetmvc-ajax")
                              .Transport(t =>
                              {
                                  t.Read(r => r.Action("GetListTmunicipios", "Tlistas", new { Area = "ADMIN" }).Type(HttpVerbs.Post));
                              })
                              .ServerFiltering(true)
                              .Schema(s => { s.Data("Data").Total("Total").Errors("Errors"); })
                              .Events(e => e.Error("handleOnErrorModelState"));
                      })
                      .Enable(false)
                      .AutoBind(false)
                      .CascadeFrom("departamentos")
                            )
                            @Html.ValidationMessageFor(m => m.PersonaFamiliarId)
                        </div> 
                    </div>

                </div>
                <div class="col-md-6">
                    <div class="form-group">
                      @Html.LabelFor(m => m.Fecha)
                    @(Html.Kendo().DatePickerFor(model => model.Fecha)
                              .Max(String.Format("{0:d}", DateTime.Now))
               .Format("dd/MM/yyyy")
               .ParseFormats(new String[] { "dd/MM/yyyy" })
                              .HtmlAttributes(new
                              {
                                  @class = "",
                                  style = "width: 100%",
                                  @maxlength = "10",
                                  @placeholder = "DD/MM/AAAA"
                              })
                    )
                    @Html.ValidationMessageFor(m => m.Fecha)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Observaciones)
                        @(Html.TextBoxFor(m => m.Observaciones, new { @class = "form-control", autocomplete = "off" }))
                        @Html.ValidationMessageFor(m => m.Observaciones)
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                    
                    </div>
                </div>
            </div>

        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            <button type="submit" class="btn btn-primary">Guardar</button>
        </div>
    }

    <!-- Inicialización script de vista -->
    <script>
	@(controllerName).initEdicion("@(ViewBag.Accion)");
    </script>
</div>
